/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CryptoCoffPoint,
  CryptoCoffPointInterface,
} from "../../contracts/CryptoCoffPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_campaignAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "IsAchieveGoal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "IsClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
    ],
    name: "addPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_address",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "campaign",
    outputs: [
      {
        internalType: "contract ICampaign",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Log",
        name: "log",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkLog",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claimPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMetadata",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "getTokenOfOwnerByCampaign",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getTokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "setCampaignId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526009600c553480156200001657600080fd5b5060405162002c4e38038062002c4e8339810160408190526200003991620000e4565b6040518060400160405280601381526020017f43727970746f436f6666506f696e744e465473000000000000000000000000008152506040518060400160405280601281526020017110dc9e5c1d1bd0dbd999941bda5b9d13919560721b8152508160009081620000ab9190620001bb565b506001620000ba8282620001bb565b5050600e80546001600160a01b0319166001600160a01b0393909316929092179091555062000287565b600060208284031215620000f757600080fd5b81516001600160a01b03811681146200010f57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6129b780620002976000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635ced058e1161010457806398438ac7116100a2578063c87b56dd11610071578063c87b56dd146103ef578063d7f2997614610402578063e985e9c514610415578063fafd69e71461042857600080fd5b806398438ac7146103a3578063a1448194146103b6578063a22cb465146103c9578063b88d4fde146103dc57600080fd5b80637a5b4f59116100de5780637a5b4f5914610360578063811e539c1461037557806394095c2d1461038857806395d89b411461039b57600080fd5b80635ced058e146103295780636352211e1461033a57806370a082311461034d57600080fd5b80632f745c591161017157806342842e0e1161014b57806342842e0e146102dd5780634585e33b146102f05780634ea1dedb146103035780634f6ccce71461031657600080fd5b80632f745c5914610289578063349f258b1461029c57806340691db4146102bc57600080fd5b8063095ea7b3116101ad578063095ea7b31461023c5780630d5599dc1461025157806318160ddd1461026457806323b872dd1461027657600080fd5b806301ffc9a7146101d457806306fdde03146101fc578063081812fc14610211575b600080fd5b6101e76101e2366004611f3f565b61043b565b60405190151581526020015b60405180910390f35b61020461044c565b6040516101f39190611fac565b61022461021f366004611fbf565b6104de565b6040516001600160a01b0390911681526020016101f3565b61024f61024a366004611fed565b610507565b005b6101e761025f366004611fbf565b610516565b6009545b6040519081526020016101f3565b61024f610284366004612019565b610567565b610268610297366004611fed565b6105f7565b6102af6102aa36600461205a565b61065c565b6040516101f39190612077565b6102cf6102ca3660046121a6565b6106fd565b6040516101f3929190612212565b61024f6102eb366004612019565b6107c8565b61024f6102fe36600461222d565b6107e8565b61024f610311366004611fbf565b610818565b610268610324366004611fbf565b6108e9565b610224610337366004611fbf565b90565b610224610348366004611fbf565b610942565b61026861035b36600461205a565b61094d565b610368610995565b6040516101f3919061229e565b600e54610224906001600160a01b031681565b61024f610396366004611fbf565b600d55565b610204610b4c565b6101e76103b1366004611fbf565b610b5b565b61024f6103c4366004611fed565b610b94565b61024f6103d736600461230e565b610c4c565b61024f6103ea366004612347565b610c57565b6102046103fd366004611fbf565b610c6e565b61024f610410366004611fed565b610c79565b6101e76104233660046123b2565b610e5c565b6102af610436366004611fed565b610e8a565b6000610446826110c2565b92915050565b60606000805461045b906123e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610487906123e0565b80156104d45780601f106104a9576101008083540402835291602001916104d4565b820191906000526020600020905b8154815290600101906020018083116104b757829003601f168201915b5050505050905090565b60006104e9826110e7565b506000828152600460205260409020546001600160a01b0316610446565b610512828233611120565b5050565b60008061052283610c6e565b905061055081610530610995565b600c54815181106105435761054361241a565b602002602001015161112d565b1561055e5750600192915050565b50600092915050565b6001600160a01b03821661059657604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006105a3838333611186565b9050836001600160a01b0316816001600160a01b0316146105f1576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161058d565b50505050565b60006106028361094d565b82106106335760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161058d565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b606060006106698361094d565b90506000816001600160401b03811115610685576106856120bb565b6040519080825280602002602001820160405280156106ae578160200160208202803683370190505b50905060005b828110156106f5576106c685826105f7565b8282815181106106d8576106d861241a565b6020908102919091010152806106ed81612446565b9150506106b4565b509392505050565b60016060600061072e61071360c087018761245f565b60018181106107245761072461241a565b9050602002013590565b9050600061073f60c087018761245f565b60028181106107505761075061241a565b602002919091013591506000905061076b60c088018861245f565b600381811061077c5761077c61241a565b604080516001600160a01b038816602082810191909152918101879052910292909201356060830181905292505060800160405160208183030381529060405293505050509250929050565b6107e383838360405180602001604052806000815250610c57565b505050565b600080806107f8848601866124af565b92509250925061080781600d55565b6108118383610c79565b5050505050565b61082181610b5b565b61086d5760405162461bcd60e51b815260206004820152601f60248201527f596f7520646f6e2774206861766520656e6f756768204e465420706f696e7400604482015260640161058d565b61087681610516565b156108ba5760405162461bcd60e51b8152602060048201526014602482015273151a1a5cc8139195081dd85cc818db185a5b595960621b604482015260640161058d565b6108e6816108c6610995565b600c54815181106108d9576108d961241a565b602002602001015161119f565b50565b60006108f460095490565b821061091d5760405163295f44f760e21b8152600060048201526024810183905260440161058d565b600982815481106109305761093061241a565b90600052602060002001549050919050565b6000610446826110e7565b60006001600160a01b038216610979576040516322718ad960e21b81526000600482015260240161058d565b506001600160a01b031660009081526003602052604090205490565b60606000600c5460016109a891906124e4565b6001600160401b038111156109bf576109bf6120bb565b6040519080825280602002602001820160405280156109f257816020015b60608152602001906001900390816109dd5790505b50600e54600d546040516371c715c160e11b81529293506000926001600160a01b039092169163e38e2b8291610a2e9160040190815260200190565b600060405180830381865afa158015610a4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a7391908101906125bb565b905060005b600c54610a869060016124e4565b811015610b4457600c548103610adc578160400151604051602001610aab91906126a7565b604051602081830303815290604052838281518110610acc57610acc61241a565b6020026020010181905250610b32565b6040820151610af4610aef8360016124e4565b6111ef565b604051602001610b059291906126d7565b604051602081830303815290604052838281518110610b2657610b2661241a565b60200260200101819052505b80610b3c81612446565b915050610a78565b509092915050565b60606001805461045b906123e0565b600080610b6783610c6e565b905061055081610b75610995565b6001600c54610b84919061271b565b815181106105435761054361241a565b600b8054906001906000610ba883856124e4565b9091555050600e54600d54604051631448320760e21b81526001600160a01b0390921691635120c81c91610be9918590600401918252602082015260400190565b600060405180830381600087803b158015610c0357600080fd5b505af1158015610c17573d6000803e3d6000fd5b50505050610c25838261131a565b6107e381610c31610995565b610c3c60018661271b565b815181106108d9576108d961241a565b610512338383611334565b610c62848484610567565b6105f1848484846113d3565b6060610446826114f5565b600e54600d5460405163d1854f5360e01b81526001600160a01b039092169163d1854f5391610cae9160040190815260200190565b602060405180830381865afa158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef919061272e565b610d3b5760405162461bcd60e51b815260206004820152601c60248201527f546869732063616d706169676e206973206e6f742072756e6e696e6700000000604482015260640161058d565b6000610d468361065c565b805190915015610e525760005b81518110156105f157610d7e828281518110610d7157610d7161241a565b6020026020010151610b5b565b15610d9257610d8d8484610b94565b610e40565b6000610db8838381518110610da957610da961241a565b602002602001015160006115fe565b610dc39060016124e4565b9050600081600c54610dd5919061271b565b905084811015610e1a57610e02848481518110610df457610df461241a565b602002602001015182611668565b610e15610e0f828761271b565b876116a5565b610e3d565b610e3d848481518110610e2f57610e2f61241a565b602002602001015186611668565b50505b80610e4a81612446565b915050610d53565b6107e382846116a5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60606000610e978461065c565b600e546040516371c715c160e11b8152600481018690529192506000916001600160a01b039091169063e38e2b8290602401600060405180830381865afa158015610ee6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f0e91908101906125bb565b9050600082516001600160401b03811115610f2b57610f2b6120bb565b604051908082528060200260200182016040528015610f54578160200160208202803683370190505b5090506000805b845181101561101b5760005b8460a0015151811015611008578460a001518181518110610f8a57610f8a61241a565b6020026020010151868381518110610fa457610fa461241a565b602002602001015103610ff657858281518110610fc357610fc361241a565b6020026020010151848481518110610fdd57610fdd61241a565b6020908102919091010152610ff36001846124e4565b92505b8061100081612446565b915050610f67565b508061101381612446565b915050610f5b565b506000816001600160401b03811115611036576110366120bb565b60405190808252806020026020018201604052801561105f578160200160208202803683370190505b50905060005b828110156110b65783818151811061107f5761107f61241a565b60200260200101518282815181106110995761109961241a565b6020908102919091010152806110ae81612446565b915050611065565b50979650505050505050565b60006001600160e01b0319821663780e9d6360e01b1480610446575061044682611736565b6000818152600260205260408120546001600160a01b03168061044657604051637e27328960e01b81526004810184905260240161058d565b6107e3838383600161175b565b600081604051602001611140919061274b565b6040516020818303038152906040528051906020012083604051602001611167919061274b565b6040516020818303038152906040528051906020012014905092915050565b600080611194858585611861565b90505b949350505050565b60008281526006602052604090206111b782826127b5565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6060816000036112165750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611240578061122a81612446565b91506112399050600a8361288a565b915061121a565b6000816001600160401b0381111561125a5761125a6120bb565b6040519080825280601f01601f191660200182016040528015611284576020820181803683370190505b509050815b85156113115761129a60018261271b565b905060006112a9600a8861288a565b6112b490600a61289e565b6112be908861271b565b6112c99060306128b5565b905060008160f81b9050808484815181106112e6576112e661241a565b60200101906001600160f81b031916908160001a905350611308600a8961288a565b97505050611289565b50949350505050565b61051282826040518060200160405280600081525061192e565b6001600160a01b03821661136657604051630b61174360e31b81526001600160a01b038316600482015260240161058d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156105f157604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906114159033908890879087906004016128ce565b6020604051808303816000875af1925050508015611450575060408051601f3d908101601f1916820190925261144d9181019061290b565b60015b6114b9573d80801561147e576040519150601f19603f3d011682016040523d82523d6000602084013e611483565b606091505b5080516000036114b157604051633250574960e11b81526001600160a01b038516600482015260240161058d565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461081157604051633250574960e11b81526001600160a01b038516600482015260240161058d565b6060611500826110e7565b506000828152600660205260408120805461151a906123e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611546906123e0565b80156115935780601f1061156857610100808354040283529160200191611593565b820191906000526020600020905b81548152906001019060200180831161157657829003601f168201915b5050505050905060006115b160408051602081019091526000815290565b905080516000036115c3575092915050565b8151156115f55780826040516020016115dd929190612928565b60405160208183030381529060405292505050919050565b61119784611945565b60008061160a84610c6e565b905060005b600c548110156116605761163682611625610995565b83815181106105435761054361241a565b1561164e5761164584826124e4565b92505050610446565b8061165881612446565b91505061160f565b505092915050565b600061167483836115fe565b90506000611680610995565b82815181106116915761169161241a565b602002602001015190506105f1848261119f565b6000600c54836116b5919061288a565b90506000600c54846116c79190612957565b11156116db576116d86001826124e4565b90505b60005b818110156105f1576116f160018361271b565b8103611718576117138382600c54611709919061289e565b6103c4908761271b565b611724565b61172483600c54610b94565b8061172e81612446565b9150506116de565b60006001600160e01b03198216632483248360e11b14806104465750610446826119ba565b808061176f57506001600160a01b03821615155b1561183157600061177f846110e7565b90506001600160a01b038316158015906117ab5750826001600160a01b0316816001600160a01b031614155b80156117be57506117bc8184610e5c565b155b156117e75760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161058d565b811561182f5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b60008061186f858585611a0a565b90506001600160a01b0381166118cc576118c784600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b6118ef565b846001600160a01b0316816001600160a01b0316146118ef576118ef8185611b03565b6001600160a01b03851661190b5761190684611b94565b611197565b846001600160a01b0316816001600160a01b031614611197576111978585611c43565b6119388383611c93565b6107e360008484846113d3565b6060611950826110e7565b50600061196860408051602081019091526000815290565b9050600081511161198857604051806020016040528060008152506119b3565b8061199284611cf8565b6040516020016119a3929190612928565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b14806119eb57506001600160e01b03198216635b5e139f60e01b145b8061044657506301ffc9a760e01b6001600160e01b0319831614610446565b6000828152600260205260408120546001600160a01b0390811690831615611a3757611a37818486611d8a565b6001600160a01b03811615611a7557611a5460008560008061175b565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611aa4576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000611b0e8361094d565b600083815260086020526040902054909150808214611b61576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b600954600090611ba69060019061271b565b6000838152600a602052604081205460098054939450909284908110611bce57611bce61241a565b906000526020600020015490508060098381548110611bef57611bef61241a565b6000918252602080832090910192909255828152600a90915260408082208490558582528120556009805480611c2757611c2761296b565b6001900381819060005260206000200160009055905550505050565b60006001611c508461094d565b611c5a919061271b565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160a01b038216611cbd57604051633250574960e11b81526000600482015260240161058d565b6000611ccb83836000611186565b90506001600160a01b038116156107e3576040516339e3563760e11b81526000600482015260240161058d565b60606000611d0583611dee565b60010190506000816001600160401b03811115611d2457611d246120bb565b6040519080825280601f01601f191660200182016040528015611d4e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611d5857509392505050565b611d95838383611ec6565b6107e3576001600160a01b038316611dc357604051637e27328960e01b81526004810182905260240161058d565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161058d565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611e2d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611e59576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611e7757662386f26fc10000830492506010015b6305f5e1008310611e8f576305f5e100830492506008015b6127108310611ea357612710830492506004015b60648310611eb5576064830492506002015b600a83106104465760010192915050565b60006001600160a01b038316158015906111975750826001600160a01b0316846001600160a01b03161480611f005750611f008484610e5c565b806111975750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b0319811681146108e657600080fd5b600060208284031215611f5157600080fd5b81356119b381611f29565b60005b83811015611f77578181015183820152602001611f5f565b50506000910152565b60008151808452611f98816020860160208601611f5c565b601f01601f19169290920160200192915050565b6020815260006119b36020830184611f80565b600060208284031215611fd157600080fd5b5035919050565b6001600160a01b03811681146108e657600080fd5b6000806040838503121561200057600080fd5b823561200b81611fd8565b946020939093013593505050565b60008060006060848603121561202e57600080fd5b833561203981611fd8565b9250602084013561204981611fd8565b929592945050506040919091013590565b60006020828403121561206c57600080fd5b81356119b381611fd8565b6020808252825182820181905260009190848201906040850190845b818110156120af57835183529284019291840191600101612093565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156120f3576120f36120bb565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612121576121216120bb565b604052919050565b60006001600160401b03821115612142576121426120bb565b50601f01601f191660200190565b600082601f83011261216157600080fd5b813561217461216f82612129565b6120f9565b81815284602083860101111561218957600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156121b957600080fd5b82356001600160401b03808211156121d057600080fd5b9084019061010082870312156121e557600080fd5b909250602084013590808211156121fb57600080fd5b5061220885828601612150565b9150509250929050565b82151581526040602082015260006111976040830184611f80565b6000806020838503121561224057600080fd5b82356001600160401b038082111561225757600080fd5b818501915085601f83011261226b57600080fd5b81358181111561227a57600080fd5b86602082850101111561228c57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156122f357603f198886030184526122e1858351611f80565b945092850192908501906001016122c5565b5092979650505050505050565b80151581146108e657600080fd5b6000806040838503121561232157600080fd5b823561232c81611fd8565b9150602083013561233c81612300565b809150509250929050565b6000806000806080858703121561235d57600080fd5b843561236881611fd8565b9350602085013561237881611fd8565b92506040850135915060608501356001600160401b0381111561239a57600080fd5b6123a687828801612150565b91505092959194509250565b600080604083850312156123c557600080fd5b82356123d081611fd8565b9150602083013561233c81611fd8565b600181811c908216806123f457607f821691505b60208210810361241457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161245857612458612430565b5060010190565b6000808335601e1984360301811261247657600080fd5b8301803591506001600160401b0382111561249057600080fd5b6020019150600581901b36038213156124a857600080fd5b9250929050565b6000806000606084860312156124c457600080fd5b83356124cf81611fd8565b95602085013595506040909401359392505050565b8082018082111561044657610446612430565b600082601f83011261250857600080fd5b815161251661216f82612129565b81815284602083860101111561252b57600080fd5b611197826020830160208701611f5c565b600082601f83011261254d57600080fd5b815160206001600160401b03821115612568576125686120bb565b8160051b6125778282016120f9565b928352848101820192828101908785111561259157600080fd5b83870192505b848310156125b057825182529183019190830190612597565b979650505050505050565b6000602082840312156125cd57600080fd5b81516001600160401b03808211156125e457600080fd5b9083019060c082860312156125f857600080fd5b6126006120d1565b82518281111561260f57600080fd5b61261b878286016124f7565b82525060208301518281111561263057600080fd5b61263c878286016124f7565b60208301525060408301518281111561265457600080fd5b612660878286016124f7565b604083015250606083015160608201526080830151608082015260a08301518281111561268c57600080fd5b6126988782860161253c565b60a08301525095945050505050565b600082516126b9818460208701611f5c565b6b31b630b4b6b2b2173539b7b760a11b920191825250600c01919050565b600083516126e9818460208801611f5c565b8351908301906126fd818360208801611f5c565b693837b4b73a173539b7b760b11b9101908152600a01949350505050565b8181038181111561044657610446612430565b60006020828403121561274057600080fd5b81516119b381612300565b6000825161275d818460208701611f5c565b9190910192915050565b601f8211156107e357600081815260208120601f850160051c8101602086101561278e5750805b601f850160051c820191505b818110156127ad5782815560010161279a565b505050505050565b81516001600160401b038111156127ce576127ce6120bb565b6127e2816127dc84546123e0565b84612767565b602080601f83116001811461281757600084156127ff5750858301515b600019600386901b1c1916600185901b1785556127ad565b600085815260208120601f198616915b8281101561284657888601518255948401946001909101908401612827565b50858210156128645787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b60008261289957612899612874565b500490565b808202811582820484141761044657610446612430565b60ff818116838216019081111561044657610446612430565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061290190830184611f80565b9695505050505050565b60006020828403121561291d57600080fd5b81516119b381611f29565b6000835161293a818460208801611f5c565b83519083019061294e818360208801611f5c565b01949350505050565b60008261296657612966612874565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220df5c48a46c369baee29fbab751cdcdff1e9fea35dd5e959739ac9a158b17fb2464736f6c63430008140033";

type CryptoCoffPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoCoffPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoCoffPoint__factory extends ContractFactory {
  constructor(...args: CryptoCoffPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _campaignAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_campaignAddress, overrides || {});
  }
  override deploy(
    _campaignAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_campaignAddress, overrides || {}) as Promise<
      CryptoCoffPoint & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CryptoCoffPoint__factory {
    return super.connect(runner) as CryptoCoffPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoCoffPointInterface {
    return new Interface(_abi) as CryptoCoffPointInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CryptoCoffPoint {
    return new Contract(address, _abi, runner) as unknown as CryptoCoffPoint;
  }
}
