/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CryptoCoffPoint,
  CryptoCoffPointInterface,
} from "../../contracts/CryptoCoffPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_campaignAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "IsAchieveGoal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "IsClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_customerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_point",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "addPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_address",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "campaign",
    outputs: [
      {
        internalType: "contract ICampaign",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Log",
        name: "log",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkLog",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claimPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMetadata",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "getTokenOfOwnerByCampaign",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getTokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "setCampaignId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setNewTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526009600c553480156200001657600080fd5b5060405162002ce938038062002ce98339810160408190526200003991620000e4565b6040518060400160405280601381526020017f43727970746f436f6666506f696e744e465473000000000000000000000000008152506040518060400160405280601281526020017110dc9e5c1d1bd0dbd999941bda5b9d13919560721b8152508160009081620000ab9190620001bb565b506001620000ba8282620001bb565b5050600e80546001600160a01b0319166001600160a01b0393909316929092179091555062000287565b600060208284031215620000f757600080fd5b81516001600160a01b03811681146200010f57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612a5280620002976000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80634f6ccce71161010457806395d89b41116100a2578063b88d4fde11610071578063b88d4fde1461040d578063c87b56dd14610420578063e985e9c514610433578063fafd69e71461044657600080fd5b806395d89b41146103cc57806398438ac7146103d45780639f81a62f146103e7578063a22cb465146103fa57600080fd5b806370a08231116100de57806370a082311461037e5780637a5b4f5914610391578063811e539c146103a657806394095c2d146103b957600080fd5b80634f6ccce7146103475780635ced058e1461035a5780636352211e1461036b57600080fd5b806324eeedf61161017c57806340691db41161014b57806340691db4146102ed57806342842e0e1461030e5780634585e33b146103215780634ea1dedb1461033457600080fd5b806324eeedf6146102945780632ce8d6fe146102a75780632f745c59146102ba578063349f258b146102cd57600080fd5b8063095ea7b3116101b8578063095ea7b3146102475780630d5599dc1461025c57806318160ddd1461026f57806323b872dd1461028157600080fd5b806301ffc9a7146101df57806306fdde0314610207578063081812fc1461021c575b600080fd5b6101f26101ed366004611f78565b610459565b60405190151581526020015b60405180910390f35b61020f61046a565b6040516101fe9190611fe5565b61022f61022a366004611ff8565b6104fc565b6040516001600160a01b0390911681526020016101fe565b61025a610255366004612026565b610525565b005b6101f261026a366004611ff8565b610534565b6009545b6040519081526020016101fe565b61025a61028f366004612052565b610585565b61025a6102a2366004612093565b610615565b61025a6102b536600461219b565b6106d1565b6102736102c8366004612026565b6106db565b6102e06102db3660046121f5565b610740565b6040516101fe9190612212565b6103006102fb366004612276565b6107e1565b6040516101fe9291906122d8565b61025a61031c366004612052565b6108ac565b61025a61032f3660046122f3565b6108cc565b61025a610342366004611ff8565b6108f4565b610273610355366004611ff8565b6109b8565b61022f610368366004611ff8565b90565b61022f610379366004611ff8565b610a11565b61027361038c3660046121f5565b610a1c565b610399610a64565b6040516101fe9190612364565b600e5461022f906001600160a01b031681565b61025a6103c7366004611ff8565b600d55565b61020f610c1b565b6101f26103e2366004611ff8565b610c2a565b61025a6103f5366004612093565b610c75565b61025a6104083660046123d4565b610e61565b61025a61041b36600461240d565b610e6c565b61020f61042e366004611ff8565b610e83565b6101f2610441366004612478565b610e8e565b6102e0610454366004612026565b610ebc565b6000610464826110f4565b92915050565b606060008054610479906124a6565b80601f01602080910402602001604051908101604052809291908181526020018280546104a5906124a6565b80156104f25780601f106104c7576101008083540402835291602001916104f2565b820191906000526020600020905b8154815290600101906020018083116104d557829003601f168201915b5050505050905090565b600061050782611119565b506000828152600460205260409020546001600160a01b0316610464565b610530828233611152565b5050565b60008061054083610e83565b905061056e8161054e610a64565b600c5481518110610561576105616124e0565b602002602001015161115f565b1561057c5750600192915050565b50600092915050565b6001600160a01b0382166105b457604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006105c18383336111b8565b9050836001600160a01b0316816001600160a01b03161461060f576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105ab565b50505050565b600b8054906001906000610629838561250c565b9091555050600e54604051631448320760e21b815260048101849052602481018390526001600160a01b0390911690635120c81c90604401600060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b5050505061069d84826111d1565b61060f816106a9610a64565b6106b460018761251f565b815181106106c4576106c46124e0565b60200260200101516111eb565b61053082826111eb565b60006106e683610a1c565b82106107175760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016105ab565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b6060600061074d83610a1c565b90506000816001600160401b03811115610769576107696120c8565b604051908082528060200260200182016040528015610792578160200160208202803683370190505b50905060005b828110156107d9576107aa85826106db565b8282815181106107bc576107bc6124e0565b6020908102919091010152806107d181612532565b915050610798565b509392505050565b6001606060006108126107f760c087018761254b565b6001818110610808576108086124e0565b9050602002013590565b9050600061082360c087018761254b565b6002818110610834576108346124e0565b602002919091013591506000905061084f60c088018861254b565b6003818110610860576108606124e0565b604080516001600160a01b038816602082810191909152918101879052910292909201356060830181905292505060800160405160208183030381529060405293505050509250929050565b6108c783838360405180602001604052806000815250610e6c565b505050565b600080806108dc84860186612093565b9250925092506108ed838383610c75565b5050505050565b6108fd81610c2a565b6109495760405162461bcd60e51b815260206004820152601f60248201527f596f7520646f6e2774206861766520656e6f756768204e465420706f696e740060448201526064016105ab565b61095281610534565b156109965760405162461bcd60e51b8152602060048201526014602482015273151a1a5cc8139195081dd85cc818db185a5b595960621b60448201526064016105ab565b6109b5816109a2610a64565b600c54815181106106c4576106c46124e0565b50565b60006109c360095490565b82106109ec5760405163295f44f760e21b815260006004820152602481018390526044016105ab565b600982815481106109ff576109ff6124e0565b90600052602060002001549050919050565b600061046482611119565b60006001600160a01b038216610a48576040516322718ad960e21b8152600060048201526024016105ab565b506001600160a01b031660009081526003602052604090205490565b60606000600c546001610a77919061250c565b6001600160401b03811115610a8e57610a8e6120c8565b604051908082528060200260200182016040528015610ac157816020015b6060815260200190600190039081610aac5790505b50600e54600d546040516371c715c160e11b81529293506000926001600160a01b039092169163e38e2b8291610afd9160040190815260200190565b600060405180830381865afa158015610b1a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b42919081019061265f565b905060005b600c54610b5590600161250c565b811015610c1357600c548103610bab578160400151604051602001610b7a9190612755565b604051602081830303815290604052838281518110610b9b57610b9b6124e0565b6020026020010181905250610c01565b6040820151610bc3610bbe83600161250c565b61123b565b604051602001610bd4929190612785565b604051602081830303815290604052838281518110610bf557610bf56124e0565b60200260200101819052505b80610c0b81612532565b915050610b47565b509092915050565b606060018054610479906124a6565b600080610c3683610e83565b9050610c6381610c44610a64565b6001600c54610c53919061251f565b81518110610561576105616124e0565b8061056e575061056e8161054e610a64565b600e5460405163d1854f5360e01b8152600481018390526001600160a01b039091169063d1854f5390602401602060405180830381865afa158015610cbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce291906127c9565b610d2e5760405162461bcd60e51b815260206004820152601c60248201527f546869732063616d706169676e206973206e6f742072756e6e696e670000000060448201526064016105ab565b6000610d3984610740565b905060008151118015610d785750610d768160018351610d59919061251f565b81518110610d6957610d696124e0565b6020026020010151610c2a565b155b15610e56576000610db08260018451610d91919061251f565b81518110610da157610da16124e0565b60200260200101516000611366565b610dbb90600161250c565b9050600081600c54610dcd919061251f565b9050848111610e1f57610e068360018551610de8919061251f565b81518110610df857610df86124e0565b6020026020010151826113d0565b610e1a610e13828761251f565b878661140d565b610e4f565b610e4f8360018551610e31919061251f565b81518110610e4157610e416124e0565b6020026020010151866113d0565b505061060f565b61060f83858461140d565b6105303383836114a5565b610e77848484610585565b61060f84848484611544565b606061046482611666565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60606000610ec984610740565b600e546040516371c715c160e11b8152600481018690529192506000916001600160a01b039091169063e38e2b8290602401600060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f40919081019061265f565b9050600082516001600160401b03811115610f5d57610f5d6120c8565b604051908082528060200260200182016040528015610f86578160200160208202803683370190505b5090506000805b845181101561104d5760005b8460c001515181101561103a578460c001518181518110610fbc57610fbc6124e0565b6020026020010151868381518110610fd657610fd66124e0565b60200260200101510361102857858281518110610ff557610ff56124e0565b602002602001015184848151811061100f5761100f6124e0565b602090810291909101015261102560018461250c565b92505b8061103281612532565b915050610f99565b508061104581612532565b915050610f8d565b506000816001600160401b03811115611068576110686120c8565b604051908082528060200260200182016040528015611091578160200160208202803683370190505b50905060005b828110156110e8578381815181106110b1576110b16124e0565b60200260200101518282815181106110cb576110cb6124e0565b6020908102919091010152806110e081612532565b915050611097565b50979650505050505050565b60006001600160e01b0319821663780e9d6360e01b148061046457506104648261176f565b6000818152600260205260408120546001600160a01b03168061046457604051637e27328960e01b8152600481018490526024016105ab565b6108c78383836001611794565b60008160405160200161117291906127e6565b604051602081830303815290604052805190602001208360405160200161119991906127e6565b6040516020818303038152906040528051906020012014905092915050565b6000806111c685858561189a565b90505b949350505050565b610530828260405180602001604052806000815250611967565b60008281526006602052604090206112038282612850565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6060816000036112625750506040805180820190915260018152600360fc1b602082015290565b8160005b811561128c578061127681612532565b91506112859050600a83612925565b9150611266565b6000816001600160401b038111156112a6576112a66120c8565b6040519080825280601f01601f1916602001820160405280156112d0576020820181803683370190505b509050815b851561135d576112e660018261251f565b905060006112f5600a88612925565b61130090600a612939565b61130a908861251f565b611315906030612950565b905060008160f81b905080848481518110611332576113326124e0565b60200101906001600160f81b031916908160001a905350611354600a89612925565b975050506112d5565b50949350505050565b60008061137284610e83565b905060005b600c548110156113c85761139e8261138d610a64565b8381518110610561576105616124e0565b156113b6576113ad848261250c565b92505050610464565b806113c081612532565b915050611377565b505092915050565b60006113dc8383611366565b905060006113e8610a64565b82815181106113f9576113f96124e0565b6020026020010151905061060f84826106d1565b6000600c548461141d9190612925565b90506000600c548561142f9190612969565b11156114435761144060018261250c565b90505b60005b818110156108ed5761145960018361251f565b8103611486576114818482600c546114719190612939565b61147b908861251f565b85610615565b611493565b61149384600c5485610615565b8061149d81612532565b915050611446565b6001600160a01b0382166114d757604051630b61174360e31b81526001600160a01b03831660048201526024016105ab565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561060f57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061158690339088908790879060040161297d565b6020604051808303816000875af19250505080156115c1575060408051601f3d908101601f191682019092526115be918101906129ba565b60015b61162a573d8080156115ef576040519150601f19603f3d011682016040523d82523d6000602084013e6115f4565b606091505b50805160000361162257604051633250574960e11b81526001600160a01b03851660048201526024016105ab565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146108ed57604051633250574960e11b81526001600160a01b03851660048201526024016105ab565b606061167182611119565b506000828152600660205260408120805461168b906124a6565b80601f01602080910402602001604051908101604052809291908181526020018280546116b7906124a6565b80156117045780601f106116d957610100808354040283529160200191611704565b820191906000526020600020905b8154815290600101906020018083116116e757829003601f168201915b50505050509050600061172260408051602081019091526000815290565b90508051600003611734575092915050565b81511561176657808260405160200161174e9291906129d7565b60405160208183030381529060405292505050919050565b6111c98461197e565b60006001600160e01b03198216632483248360e11b14806104645750610464826119f3565b80806117a857506001600160a01b03821615155b1561186a5760006117b884611119565b90506001600160a01b038316158015906117e45750826001600160a01b0316816001600160a01b031614155b80156117f757506117f58184610e8e565b155b156118205760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016105ab565b81156118685783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806118a8858585611a43565b90506001600160a01b0381166119055761190084600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b611928565b846001600160a01b0316816001600160a01b031614611928576119288185611b3c565b6001600160a01b0385166119445761193f84611bcd565b6111c9565b846001600160a01b0316816001600160a01b0316146111c9576111c98585611c7c565b6119718383611ccc565b6108c76000848484611544565b606061198982611119565b5060006119a160408051602081019091526000815290565b905060008151116119c157604051806020016040528060008152506119ec565b806119cb84611d31565b6040516020016119dc9291906129d7565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480611a2457506001600160e01b03198216635b5e139f60e01b145b8061046457506301ffc9a760e01b6001600160e01b0319831614610464565b6000828152600260205260408120546001600160a01b0390811690831615611a7057611a70818486611dc3565b6001600160a01b03811615611aae57611a8d600085600080611794565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611add576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000611b4783610a1c565b600083815260086020526040902054909150808214611b9a576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b600954600090611bdf9060019061251f565b6000838152600a602052604081205460098054939450909284908110611c0757611c076124e0565b906000526020600020015490508060098381548110611c2857611c286124e0565b6000918252602080832090910192909255828152600a90915260408082208490558582528120556009805480611c6057611c60612a06565b6001900381819060005260206000200160009055905550505050565b60006001611c8984610a1c565b611c93919061251f565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160a01b038216611cf657604051633250574960e11b8152600060048201526024016105ab565b6000611d04838360006111b8565b90506001600160a01b038116156108c7576040516339e3563760e11b8152600060048201526024016105ab565b60606000611d3e83611e27565b60010190506000816001600160401b03811115611d5d57611d5d6120c8565b6040519080825280601f01601f191660200182016040528015611d87576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611d9157509392505050565b611dce838383611eff565b6108c7576001600160a01b038316611dfc57604051637e27328960e01b8152600481018290526024016105ab565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016105ab565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611e665772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611e92576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611eb057662386f26fc10000830492506010015b6305f5e1008310611ec8576305f5e100830492506008015b6127108310611edc57612710830492506004015b60648310611eee576064830492506002015b600a83106104645760010192915050565b60006001600160a01b038316158015906111c95750826001600160a01b0316846001600160a01b03161480611f395750611f398484610e8e565b806111c95750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b0319811681146109b557600080fd5b600060208284031215611f8a57600080fd5b81356119ec81611f62565b60005b83811015611fb0578181015183820152602001611f98565b50506000910152565b60008151808452611fd1816020860160208601611f95565b601f01601f19169290920160200192915050565b6020815260006119ec6020830184611fb9565b60006020828403121561200a57600080fd5b5035919050565b6001600160a01b03811681146109b557600080fd5b6000806040838503121561203957600080fd5b823561204481612011565b946020939093013593505050565b60008060006060848603121561206757600080fd5b833561207281612011565b9250602084013561208281612011565b929592945050506040919091013590565b6000806000606084860312156120a857600080fd5b83356120b381612011565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715612100576121006120c8565b60405290565b604051601f8201601f191681016001600160401b038111828210171561212e5761212e6120c8565b604052919050565b60006001600160401b0382111561214f5761214f6120c8565b50601f01601f191660200190565b600061217061216b84612136565b612106565b905082815283838301111561218457600080fd5b828260208301376000602084830101529392505050565b600080604083850312156121ae57600080fd5b8235915060208301356001600160401b038111156121cb57600080fd5b8301601f810185136121dc57600080fd5b6121eb8582356020840161215d565b9150509250929050565b60006020828403121561220757600080fd5b81356119ec81612011565b6020808252825182820181905260009190848201906040850190845b8181101561224a5783518352928401929184019160010161222e565b50909695505050505050565b600082601f83011261226757600080fd5b6119ec8383356020850161215d565b6000806040838503121561228957600080fd5b82356001600160401b03808211156122a057600080fd5b9084019061010082870312156122b557600080fd5b909250602084013590808211156122cb57600080fd5b506121eb85828601612256565b82151581526040602082015260006111c96040830184611fb9565b6000806020838503121561230657600080fd5b82356001600160401b038082111561231d57600080fd5b818501915085601f83011261233157600080fd5b81358181111561234057600080fd5b86602082850101111561235257600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156123b957603f198886030184526123a7858351611fb9565b9450928501929085019060010161238b565b5092979650505050505050565b80151581146109b557600080fd5b600080604083850312156123e757600080fd5b82356123f281612011565b91506020830135612402816123c6565b809150509250929050565b6000806000806080858703121561242357600080fd5b843561242e81612011565b9350602085013561243e81612011565b92506040850135915060608501356001600160401b0381111561246057600080fd5b61246c87828801612256565b91505092959194509250565b6000806040838503121561248b57600080fd5b823561249681612011565b9150602083013561240281612011565b600181811c908216806124ba57607f821691505b6020821081036124da57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610464576104646124f6565b81810381811115610464576104646124f6565b600060018201612544576125446124f6565b5060010190565b6000808335601e1984360301811261256257600080fd5b8301803591506001600160401b0382111561257c57600080fd5b6020019150600581901b360382131561259457600080fd5b9250929050565b600082601f8301126125ac57600080fd5b81516125ba61216b82612136565b8181528460208386010111156125cf57600080fd5b6111c9826020830160208701611f95565b600082601f8301126125f157600080fd5b815160206001600160401b0382111561260c5761260c6120c8565b8160051b61261b828201612106565b928352848101820192828101908785111561263557600080fd5b83870192505b848310156126545782518252918301919083019061263b565b979650505050505050565b60006020828403121561267157600080fd5b81516001600160401b038082111561268857600080fd5b9083019060e0828603121561269c57600080fd5b6126a46120de565b8251828111156126b357600080fd5b6126bf8782860161259b565b8252506020830151828111156126d457600080fd5b6126e08782860161259b565b6020830152506040830151828111156126f857600080fd5b6127048782860161259b565b604083015250606083015160608201526080830151608082015260a083015160a082015260c08301518281111561273a57600080fd5b612746878286016125e0565b60c08301525095945050505050565b60008251612767818460208701611f95565b6b31b630b4b6b2b2173539b7b760a11b920191825250600c01919050565b60008351612797818460208801611f95565b8351908301906127ab818360208801611f95565b693837b4b73a173539b7b760b11b9101908152600a01949350505050565b6000602082840312156127db57600080fd5b81516119ec816123c6565b600082516127f8818460208701611f95565b9190910192915050565b601f8211156108c757600081815260208120601f850160051c810160208610156128295750805b601f850160051c820191505b8181101561284857828155600101612835565b505050505050565b81516001600160401b03811115612869576128696120c8565b61287d8161287784546124a6565b84612802565b602080601f8311600181146128b2576000841561289a5750858301515b600019600386901b1c1916600185901b178555612848565b600085815260208120601f198616915b828110156128e1578886015182559484019460019091019084016128c2565b50858210156128ff5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b6000826129345761293461290f565b500490565b8082028115828204841417610464576104646124f6565b60ff8181168382160190811115610464576104646124f6565b6000826129785761297861290f565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906129b090830184611fb9565b9695505050505050565b6000602082840312156129cc57600080fd5b81516119ec81611f62565b600083516129e9818460208801611f95565b8351908301906129fd818360208801611f95565b01949350505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ee51745a0aaf0ef7304acacd47ce5be00cb54327d672d4b21acc3a1365d43f5764736f6c63430008140033";

type CryptoCoffPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoCoffPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoCoffPoint__factory extends ContractFactory {
  constructor(...args: CryptoCoffPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _campaignAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_campaignAddress, overrides || {});
  }
  override deploy(
    _campaignAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_campaignAddress, overrides || {}) as Promise<
      CryptoCoffPoint & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CryptoCoffPoint__factory {
    return super.connect(runner) as CryptoCoffPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoCoffPointInterface {
    return new Interface(_abi) as CryptoCoffPointInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CryptoCoffPoint {
    return new Contract(address, _abi, runner) as unknown as CryptoCoffPoint;
  }
}
