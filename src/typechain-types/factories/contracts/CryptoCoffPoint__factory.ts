/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CryptoCoffPoint,
  CryptoCoffPointInterface,
} from "../../contracts/CryptoCoffPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_campaignAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "IsAchieveGoal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "IsClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_customerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_point",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "addPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_address",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "campaign",
    outputs: [
      {
        internalType: "contract ICampaign",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Log",
        name: "log",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkLog",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claimPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMetadata",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "getTokenOfOwnerByCampaign",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getTokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "point",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "setCampaignId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526009600c553480156200001657600080fd5b5060405162002c5f38038062002c5f8339810160408190526200003991620000e4565b6040518060400160405280601381526020017f43727970746f436f6666506f696e744e465473000000000000000000000000008152506040518060400160405280601281526020017110dc9e5c1d1bd0dbd999941bda5b9d13919560721b8152508160009081620000ab9190620001bb565b506001620000ba8282620001bb565b5050600e80546001600160a01b0319166001600160a01b0393909316929092179091555062000287565b600060208284031215620000f757600080fd5b81516001600160a01b03811681146200010f57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6129c880620002976000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80634f6ccce71161010457806395d89b41116100a2578063b88d4fde11610071578063b88d4fde146103ef578063c87b56dd14610402578063e985e9c514610415578063fafd69e71461042857600080fd5b806395d89b41146103ae57806398438ac7146103b65780639f81a62f146103c9578063a22cb465146103dc57600080fd5b806370a08231116100de57806370a08231146103605780637a5b4f5914610373578063811e539c1461038857806394095c2d1461039b57600080fd5b80634f6ccce7146103295780635ced058e1461033c5780636352211e1461034d57600080fd5b806324eeedf61161017157806340691db41161014b57806340691db4146102cf57806342842e0e146102f05780634585e33b146103035780634ea1dedb1461031657600080fd5b806324eeedf6146102895780632f745c591461029c578063349f258b146102af57600080fd5b8063095ea7b3116101ad578063095ea7b31461023c5780630d5599dc1461025157806318160ddd1461026457806323b872dd1461027657600080fd5b806301ffc9a7146101d457806306fdde03146101fc578063081812fc14610211575b600080fd5b6101e76101e2366004611f50565b61043b565b60405190151581526020015b60405180910390f35b61020461044c565b6040516101f39190611fbd565b61022461021f366004611fd0565b6104de565b6040516001600160a01b0390911681526020016101f3565b61024f61024a366004611ffe565b610507565b005b6101e761025f366004611fd0565b610516565b6009545b6040519081526020016101f3565b61024f61028436600461202a565b610567565b61024f61029736600461206b565b6105f7565b6102686102aa366004611ffe565b6106b3565b6102c26102bd3660046120a0565b610718565b6040516101f391906120bd565b6102e26102dd3660046121ec565b6107b9565b6040516101f3929190612258565b61024f6102fe36600461202a565b610884565b61024f610311366004612273565b6108a4565b61024f610324366004611fd0565b6108cc565b610268610337366004611fd0565b610990565b61022461034a366004611fd0565b90565b61022461035b366004611fd0565b6109e9565b61026861036e3660046120a0565b6109f4565b61037b610a3c565b6040516101f391906122e4565b600e54610224906001600160a01b031681565b61024f6103a9366004611fd0565b600d55565b610204610bf3565b6101e76103c4366004611fd0565b610c02565b61024f6103d736600461206b565b610c4d565b61024f6103ea366004612354565b610e39565b61024f6103fd36600461238d565b610e44565b610204610410366004611fd0565b610e5b565b6101e76104233660046123f8565b610e66565b6102c2610436366004611ffe565b610e94565b6000610446826110cc565b92915050565b60606000805461045b90612426565b80601f016020809104026020016040519081016040528092919081815260200182805461048790612426565b80156104d45780601f106104a9576101008083540402835291602001916104d4565b820191906000526020600020905b8154815290600101906020018083116104b757829003601f168201915b5050505050905090565b60006104e9826110f1565b506000828152600460205260409020546001600160a01b0316610446565b61051282823361112a565b5050565b60008061052283610e5b565b905061055081610530610a3c565b600c548151811061054357610543612460565b6020026020010151611137565b1561055e5750600192915050565b50600092915050565b6001600160a01b03821661059657604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006105a3838333611190565b9050836001600160a01b0316816001600160a01b0316146105f1576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161058d565b50505050565b600b805490600190600061060b838561248c565b9091555050600e54604051631448320760e21b815260048101849052602481018390526001600160a01b0390911690635120c81c90604401600060405180830381600087803b15801561065d57600080fd5b505af1158015610671573d6000803e3d6000fd5b5050505061067f84826111a9565b6105f18161068b610a3c565b61069660018761249f565b815181106106a6576106a6612460565b60200260200101516111c3565b60006106be836109f4565b82106106ef5760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161058d565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b60606000610725836109f4565b90506000816001600160401b0381111561074157610741612101565b60405190808252806020026020018201604052801561076a578160200160208202803683370190505b50905060005b828110156107b15761078285826106b3565b82828151811061079457610794612460565b6020908102919091010152806107a9816124b2565b915050610770565b509392505050565b6001606060006107ea6107cf60c08701876124cb565b60018181106107e0576107e0612460565b9050602002013590565b905060006107fb60c08701876124cb565b600281811061080c5761080c612460565b602002919091013591506000905061082760c08801886124cb565b600381811061083857610838612460565b604080516001600160a01b038816602082810191909152918101879052910292909201356060830181905292505060800160405160208183030381529060405293505050509250929050565b61089f83838360405180602001604052806000815250610e44565b505050565b600080806108b48486018661206b565b9250925092506108c5838383610c4d565b5050505050565b6108d581610c02565b6109215760405162461bcd60e51b815260206004820152601f60248201527f596f7520646f6e2774206861766520656e6f756768204e465420706f696e7400604482015260640161058d565b61092a81610516565b1561096e5760405162461bcd60e51b8152602060048201526014602482015273151a1a5cc8139195081dd85cc818db185a5b595960621b604482015260640161058d565b61098d8161097a610a3c565b600c54815181106106a6576106a6612460565b50565b600061099b60095490565b82106109c45760405163295f44f760e21b8152600060048201526024810183905260440161058d565b600982815481106109d7576109d7612460565b90600052602060002001549050919050565b6000610446826110f1565b60006001600160a01b038216610a20576040516322718ad960e21b81526000600482015260240161058d565b506001600160a01b031660009081526003602052604090205490565b60606000600c546001610a4f919061248c565b6001600160401b03811115610a6657610a66612101565b604051908082528060200260200182016040528015610a9957816020015b6060815260200190600190039081610a845790505b50600e54600d546040516371c715c160e11b81529293506000926001600160a01b039092169163e38e2b8291610ad59160040190815260200190565b600060405180830381865afa158015610af2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b1a91908101906125df565b905060005b600c54610b2d90600161248c565b811015610beb57600c548103610b83578160400151604051602001610b5291906126cb565b604051602081830303815290604052838281518110610b7357610b73612460565b6020026020010181905250610bd9565b6040820151610b9b610b9683600161248c565b611213565b604051602001610bac9291906126fb565b604051602081830303815290604052838281518110610bcd57610bcd612460565b60200260200101819052505b80610be3816124b2565b915050610b1f565b509092915050565b60606001805461045b90612426565b600080610c0e83610e5b565b9050610c3b81610c1c610a3c565b6001600c54610c2b919061249f565b8151811061054357610543612460565b80610550575061055081610530610a3c565b600e5460405163d1854f5360e01b8152600481018390526001600160a01b039091169063d1854f5390602401602060405180830381865afa158015610c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cba919061273f565b610d065760405162461bcd60e51b815260206004820152601c60248201527f546869732063616d706169676e206973206e6f742072756e6e696e6700000000604482015260640161058d565b6000610d1184610718565b905060008151118015610d505750610d4e8160018351610d31919061249f565b81518110610d4157610d41612460565b6020026020010151610c02565b155b15610e2e576000610d888260018451610d69919061249f565b81518110610d7957610d79612460565b6020026020010151600061133e565b610d9390600161248c565b9050600081600c54610da5919061249f565b9050848111610df757610dde8360018551610dc0919061249f565b81518110610dd057610dd0612460565b6020026020010151826113a8565b610df2610deb828761249f565b87866113e5565b610e27565b610e278360018551610e09919061249f565b81518110610e1957610e19612460565b6020026020010151866113a8565b50506105f1565b6105f18385846113e5565b61051233838361147d565b610e4f848484610567565b6105f18484848461151c565b60606104468261163e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60606000610ea184610718565b600e546040516371c715c160e11b8152600481018690529192506000916001600160a01b039091169063e38e2b8290602401600060405180830381865afa158015610ef0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f1891908101906125df565b9050600082516001600160401b03811115610f3557610f35612101565b604051908082528060200260200182016040528015610f5e578160200160208202803683370190505b5090506000805b84518110156110255760005b8460a0015151811015611012578460a001518181518110610f9457610f94612460565b6020026020010151868381518110610fae57610fae612460565b60200260200101510361100057858281518110610fcd57610fcd612460565b6020026020010151848481518110610fe757610fe7612460565b6020908102919091010152610ffd60018461248c565b92505b8061100a816124b2565b915050610f71565b508061101d816124b2565b915050610f65565b506000816001600160401b0381111561104057611040612101565b604051908082528060200260200182016040528015611069578160200160208202803683370190505b50905060005b828110156110c05783818151811061108957611089612460565b60200260200101518282815181106110a3576110a3612460565b6020908102919091010152806110b8816124b2565b91505061106f565b50979650505050505050565b60006001600160e01b0319821663780e9d6360e01b1480610446575061044682611747565b6000818152600260205260408120546001600160a01b03168061044657604051637e27328960e01b81526004810184905260240161058d565b61089f838383600161176c565b60008160405160200161114a919061275c565b6040516020818303038152906040528051906020012083604051602001611171919061275c565b6040516020818303038152906040528051906020012014905092915050565b60008061119e858585611872565b90505b949350505050565b61051282826040518060200160405280600081525061193f565b60008281526006602052604090206111db82826127c6565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60608160000361123a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611264578061124e816124b2565b915061125d9050600a8361289b565b915061123e565b6000816001600160401b0381111561127e5761127e612101565b6040519080825280601f01601f1916602001820160405280156112a8576020820181803683370190505b509050815b8515611335576112be60018261249f565b905060006112cd600a8861289b565b6112d890600a6128af565b6112e2908861249f565b6112ed9060306128c6565b905060008160f81b90508084848151811061130a5761130a612460565b60200101906001600160f81b031916908160001a90535061132c600a8961289b565b975050506112ad565b50949350505050565b60008061134a84610e5b565b905060005b600c548110156113a05761137682611365610a3c565b838151811061054357610543612460565b1561138e57611385848261248c565b92505050610446565b80611398816124b2565b91505061134f565b505092915050565b60006113b4838361133e565b905060006113c0610a3c565b82815181106113d1576113d1612460565b602002602001015190506105f184826111c3565b6000600c54846113f5919061289b565b90506000600c548561140791906128df565b111561141b5761141860018261248c565b90505b60005b818110156108c55761143160018361249f565b810361145e576114598482600c5461144991906128af565b611453908861249f565b856105f7565b61146b565b61146b84600c54856105f7565b80611475816124b2565b91505061141e565b6001600160a01b0382166114af57604051630b61174360e31b81526001600160a01b038316600482015260240161058d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156105f157604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061155e9033908890879087906004016128f3565b6020604051808303816000875af1925050508015611599575060408051601f3d908101601f1916820190925261159691810190612930565b60015b611602573d8080156115c7576040519150601f19603f3d011682016040523d82523d6000602084013e6115cc565b606091505b5080516000036115fa57604051633250574960e11b81526001600160a01b038516600482015260240161058d565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146108c557604051633250574960e11b81526001600160a01b038516600482015260240161058d565b6060611649826110f1565b506000828152600660205260408120805461166390612426565b80601f016020809104026020016040519081016040528092919081815260200182805461168f90612426565b80156116dc5780601f106116b1576101008083540402835291602001916116dc565b820191906000526020600020905b8154815290600101906020018083116116bf57829003601f168201915b5050505050905060006116fa60408051602081019091526000815290565b9050805160000361170c575092915050565b81511561173e57808260405160200161172692919061294d565b60405160208183030381529060405292505050919050565b6111a184611956565b60006001600160e01b03198216632483248360e11b14806104465750610446826119cb565b808061178057506001600160a01b03821615155b15611842576000611790846110f1565b90506001600160a01b038316158015906117bc5750826001600160a01b0316816001600160a01b031614155b80156117cf57506117cd8184610e66565b155b156117f85760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161058d565b81156118405783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b600080611880858585611a1b565b90506001600160a01b0381166118dd576118d884600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b611900565b846001600160a01b0316816001600160a01b031614611900576119008185611b14565b6001600160a01b03851661191c5761191784611ba5565b6111a1565b846001600160a01b0316816001600160a01b0316146111a1576111a18585611c54565b6119498383611ca4565b61089f600084848461151c565b6060611961826110f1565b50600061197960408051602081019091526000815290565b9050600081511161199957604051806020016040528060008152506119c4565b806119a384611d09565b6040516020016119b492919061294d565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b14806119fc57506001600160e01b03198216635b5e139f60e01b145b8061044657506301ffc9a760e01b6001600160e01b0319831614610446565b6000828152600260205260408120546001600160a01b0390811690831615611a4857611a48818486611d9b565b6001600160a01b03811615611a8657611a6560008560008061176c565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611ab5576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000611b1f836109f4565b600083815260086020526040902054909150808214611b72576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b600954600090611bb79060019061249f565b6000838152600a602052604081205460098054939450909284908110611bdf57611bdf612460565b906000526020600020015490508060098381548110611c0057611c00612460565b6000918252602080832090910192909255828152600a90915260408082208490558582528120556009805480611c3857611c3861297c565b6001900381819060005260206000200160009055905550505050565b60006001611c61846109f4565b611c6b919061249f565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160a01b038216611cce57604051633250574960e11b81526000600482015260240161058d565b6000611cdc83836000611190565b90506001600160a01b0381161561089f576040516339e3563760e11b81526000600482015260240161058d565b60606000611d1683611dff565b60010190506000816001600160401b03811115611d3557611d35612101565b6040519080825280601f01601f191660200182016040528015611d5f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611d6957509392505050565b611da6838383611ed7565b61089f576001600160a01b038316611dd457604051637e27328960e01b81526004810182905260240161058d565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161058d565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611e3e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611e6a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611e8857662386f26fc10000830492506010015b6305f5e1008310611ea0576305f5e100830492506008015b6127108310611eb457612710830492506004015b60648310611ec6576064830492506002015b600a83106104465760010192915050565b60006001600160a01b038316158015906111a15750826001600160a01b0316846001600160a01b03161480611f115750611f118484610e66565b806111a15750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461098d57600080fd5b600060208284031215611f6257600080fd5b81356119c481611f3a565b60005b83811015611f88578181015183820152602001611f70565b50506000910152565b60008151808452611fa9816020860160208601611f6d565b601f01601f19169290920160200192915050565b6020815260006119c46020830184611f91565b600060208284031215611fe257600080fd5b5035919050565b6001600160a01b038116811461098d57600080fd5b6000806040838503121561201157600080fd5b823561201c81611fe9565b946020939093013593505050565b60008060006060848603121561203f57600080fd5b833561204a81611fe9565b9250602084013561205a81611fe9565b929592945050506040919091013590565b60008060006060848603121561208057600080fd5b833561208b81611fe9565b95602085013595506040909401359392505050565b6000602082840312156120b257600080fd5b81356119c481611fe9565b6020808252825182820181905260009190848201906040850190845b818110156120f5578351835292840192918401916001016120d9565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561213957612139612101565b60405290565b604051601f8201601f191681016001600160401b038111828210171561216757612167612101565b604052919050565b60006001600160401b0382111561218857612188612101565b50601f01601f191660200190565b600082601f8301126121a757600080fd5b81356121ba6121b58261216f565b61213f565b8181528460208386010111156121cf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156121ff57600080fd5b82356001600160401b038082111561221657600080fd5b90840190610100828703121561222b57600080fd5b9092506020840135908082111561224157600080fd5b5061224e85828601612196565b9150509250929050565b82151581526040602082015260006111a16040830184611f91565b6000806020838503121561228657600080fd5b82356001600160401b038082111561229d57600080fd5b818501915085601f8301126122b157600080fd5b8135818111156122c057600080fd5b8660208285010111156122d257600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561233957603f19888603018452612327858351611f91565b9450928501929085019060010161230b565b5092979650505050505050565b801515811461098d57600080fd5b6000806040838503121561236757600080fd5b823561237281611fe9565b9150602083013561238281612346565b809150509250929050565b600080600080608085870312156123a357600080fd5b84356123ae81611fe9565b935060208501356123be81611fe9565b92506040850135915060608501356001600160401b038111156123e057600080fd5b6123ec87828801612196565b91505092959194509250565b6000806040838503121561240b57600080fd5b823561241681611fe9565b9150602083013561238281611fe9565b600181811c9082168061243a57607f821691505b60208210810361245a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561044657610446612476565b8181038181111561044657610446612476565b6000600182016124c4576124c4612476565b5060010190565b6000808335601e198436030181126124e257600080fd5b8301803591506001600160401b038211156124fc57600080fd5b6020019150600581901b360382131561251457600080fd5b9250929050565b600082601f83011261252c57600080fd5b815161253a6121b58261216f565b81815284602083860101111561254f57600080fd5b6111a1826020830160208701611f6d565b600082601f83011261257157600080fd5b815160206001600160401b0382111561258c5761258c612101565b8160051b61259b82820161213f565b92835284810182019282810190878511156125b557600080fd5b83870192505b848310156125d4578251825291830191908301906125bb565b979650505050505050565b6000602082840312156125f157600080fd5b81516001600160401b038082111561260857600080fd5b9083019060c0828603121561261c57600080fd5b612624612117565b82518281111561263357600080fd5b61263f8782860161251b565b82525060208301518281111561265457600080fd5b6126608782860161251b565b60208301525060408301518281111561267857600080fd5b6126848782860161251b565b604083015250606083015160608201526080830151608082015260a0830151828111156126b057600080fd5b6126bc87828601612560565b60a08301525095945050505050565b600082516126dd818460208701611f6d565b6b31b630b4b6b2b2173539b7b760a11b920191825250600c01919050565b6000835161270d818460208801611f6d565b835190830190612721818360208801611f6d565b693837b4b73a173539b7b760b11b9101908152600a01949350505050565b60006020828403121561275157600080fd5b81516119c481612346565b6000825161276e818460208701611f6d565b9190910192915050565b601f82111561089f57600081815260208120601f850160051c8101602086101561279f5750805b601f850160051c820191505b818110156127be578281556001016127ab565b505050505050565b81516001600160401b038111156127df576127df612101565b6127f3816127ed8454612426565b84612778565b602080601f83116001811461282857600084156128105750858301515b600019600386901b1c1916600185901b1785556127be565b600085815260208120601f198616915b8281101561285757888601518255948401946001909101908401612838565b50858210156128755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b6000826128aa576128aa612885565b500490565b808202811582820484141761044657610446612476565b60ff818116838216019081111561044657610446612476565b6000826128ee576128ee612885565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061292690830184611f91565b9695505050505050565b60006020828403121561294257600080fd5b81516119c481611f3a565b6000835161295f818460208801611f6d565b835190830190612973818360208801611f6d565b01949350505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d3d61b3077d14b5a8ec4a0572aff96eddd8b02cbbe8511d05b10a2da0356e7d764736f6c63430008140033";

type CryptoCoffPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoCoffPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoCoffPoint__factory extends ContractFactory {
  constructor(...args: CryptoCoffPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _campaignAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_campaignAddress, overrides || {});
  }
  override deploy(
    _campaignAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_campaignAddress, overrides || {}) as Promise<
      CryptoCoffPoint & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CryptoCoffPoint__factory {
    return super.connect(runner) as CryptoCoffPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoCoffPointInterface {
    return new Interface(_abi) as CryptoCoffPointInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CryptoCoffPoint {
    return new Contract(address, _abi, runner) as unknown as CryptoCoffPoint;
  }
}
