/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Admin, AdminInterface } from "../../contracts/Admin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRoot",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRoot",
        type: "address",
      },
    ],
    name: "RootAdminChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRootAdmin",
        type: "address",
      },
    ],
    name: "changeRootAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rootAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556102e2806100326000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631785f53c1461006757806324d7806c1461007c578063429b62e5146100bd57806358d642e8146100e057806366eb463f1461010b578063704802751461011e575b600080fd5b61007a610075366004610250565b610131565b005b6100a861008a366004610250565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100a86100cb366004610250565b60016020526000908152604090205460ff1681565b6000546100f3906001600160a01b031681565b6040516001600160a01b0390911681526020016100b4565b61007a610119366004610250565b610185565b61007a61012c366004610250565b6101ff565b6000546001600160a01b031633146101645760405162461bcd60e51b815260040161015b90610280565b60405180910390fd5b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031633146101af5760405162461bcd60e51b815260040161015b90610280565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917fb87f74f9bf2ee13b23c1f12b079998e1a4468f43938c42aa57503cf768a017f99190a35050565b6000546001600160a01b031633146102295760405162461bcd60e51b815260040161015b90610280565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b60006020828403121561026257600080fd5b81356001600160a01b038116811461027957600080fd5b9392505050565b60208082526012908201527136bab9ba103132903937b7ba1030b236b4b760711b60408201526060019056fea264697066735822122094b919e45da18859ba5a2909c6545933710e7e7011193f0613980f8bd0b9e4a264736f6c63430008140033";

type AdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Admin__factory extends ContractFactory {
  constructor(...args: AdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Admin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Admin__factory {
    return super.connect(runner) as Admin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminInterface {
    return new Interface(_abi) as AdminInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Admin {
    return new Contract(address, _abi, runner) as unknown as Admin;
  }
}
